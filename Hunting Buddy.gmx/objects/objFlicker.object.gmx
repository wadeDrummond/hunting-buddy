<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize

event_user(0);

State = 0;
Timer = irandom(timerLength1);

yPos = irandom(room_height);
yHeight = irandom_range(10, 25);
Alpha = 0;

soundIndex = audio_play_sound(sndFlicker, 1, true);
audio_sound_gain(soundIndex, 0, 0);

bgColour = c_white;
On = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Calculate Lengths...

timerLength2 = irandom_range(room_speed * 1, room_speed * 12);
timerLength1 = irandom_range(5, room_speed * 4);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Background

if !On  {
    exit;
}

draw_set_alpha(Alpha);

if (State)
    draw_set_colour(merge_colour(c_black, c_gray, random(1)));
else
    draw_set_colour(merge_colour(c_black, c_gray, random(0.1)));
draw_rectangle(0, 0, room_width, room_height, false);

bgColour = draw_get_colour();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Random

if !On  {
    audio_sound_gain(soundIndex, 0, 0);
    with (objOutro) {
        audio_sound_pitch(songCurrent, 1);
        audio_sound_gain(songCurrent, 1, 0);
    }
    exit;
}

if (State)
    {
        draw_set_alpha(random_range(0.4, 0.8));
        draw_set_colour(merge_colour(bgColour, c_black, 0.45));
        draw_rectangle(0, yPos - yHeight, room_width, yPos, false);
        draw_set_alpha(1);
    
        yPos -= random(6);
        if (yPos &lt; 0)
            yPos = room_height;
            
        audio_sound_gain(soundIndex, 1, 0);
        
        with (objOutro) {
            audio_sound_pitch(songCurrent, 0.5);
            audio_sound_gain(songCurrent, 0.5, 0);
        }
        
        draw_set_blend_mode(bm_add);
        draw_sprite_tiled_ext(sprNoise, irandom(8), 0, 0, 4, 4, c_white, random_range(0.2, 0.1));
        draw_set_blend_mode(bm_normal);
    }
else    {
    audio_sound_gain(soundIndex, 0, 0);
    with (objOutro) {
        audio_sound_pitch(songCurrent, 1);
        audio_sound_gain(songCurrent, 1, 0);
    }
}

Timer ++;

if State
    {
        if Timer &gt; timerLength1
            {
                Timer = 0;
                State = !State;
                
                event_user(0);
            }
    }
else
    {
        if Timer &gt; timerLength2
            {
                Timer = 0;
                State = !State;
            }
    }
draw_set_alpha(1);

Alpha = lerp(Alpha, 1, 0.1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
