<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-50</depth>
  <persistent>0</persistent>
  <parentName>parBillboard</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize

Value = -1;
Alpha = 0;
Ready = false;
zAdd = 16;
zVelocity = 0;

alarm[0] = 1;

var _Range = 16;
x += irandom_range(-_Range, _Range);
y += irandom_range(-_Range, _Range);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ready

Ready = true;
objPlayer.pointAmount += Value;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Billboarded Sprite

if !Ready
    exit;

d3d_set_hidden(false);

var _totalScale = 2;

//Calculate Positions
drawX = x;
drawY = y;
drawZ = ((sprite_height - sprite_yoffset) * _totalScale) + wave(0, 4, 8, 0) + zAdd;

var _Colour = merge_colour(Colour1, Colour2, wave(0, 1, 0.2, 0));

//Angle Towards Player
d3d_transform_set_identity();
d3d_transform_add_rotation_x(90);
d3d_transform_add_rotation_z(point_direction(x, y, objPlayer.cameraX, objPlayer.cameraY) + 90);

if (Value &gt; 0)  {
    var _String = "+" + string(Value);
}   else    {
    var _String = string(Value);
}

//Render Self
d3d_set_zwriteenable(false);
d3d_transform_add_translation(drawX, drawY, drawZ);
draw_set_font(fontPoints);
draw_text_parameters(fa_center, fa_middle, 0, 0, _String, Alpha, _Colour, 2, _totalScale, 0);
d3d_transform_set_identity();
d3d_set_zwriteenable(true);

d3d_set_hidden(true);

zVelocity += 0.5;
zAdd += zVelocity;

if zAdd &gt;= 1024
    instance_destroy();
    
Alpha = min(Alpha + 0.1, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
