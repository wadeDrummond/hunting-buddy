<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprRabbitIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-50</depth>
  <persistent>0</persistent>
  <parentName>parBillboard</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize

enemyWordPosition = 0;
enemyWordLength = string_length(enemyWordIndex);
enemyWordTyped = "";
enemyTargeted = false;

z = 0;

drawAlpha = 0;
drawState = 0;
addScale = 0;
addBlend = 0;
drawZ = z;
zAdd = 0;

depth = -120;
image_speed = 0.25;
image_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Miss!

var _missRange = 64;

if !g.gameHTML  {
    var _ID = instance_create(0, 0, objTracer);
    _ID.startX = x + lengthdir_x(128, objPlayer.cameraYaw) + irandom_range(-_missRange, _missRange);
    _ID.startY = y + lengthdir_y(128, objPlayer.cameraYaw) + irandom_range(-_missRange, _missRange);
    _ID.startZ = drawZ;
    _ID.endX = objPlayer.cameraX + lengthdir_x(lengthdir_x(32, objPlayer.cameraYaw), objPlayer.cameraAddTween / 6);
    _ID.endY = objPlayer.cameraY + lengthdir_x(lengthdir_y(32, objPlayer.cameraYaw), objPlayer.cameraAddTween / 6);
    _ID.endZ = objPlayer.cameraZFrom - 12 + lengthdir_y(6, objPlayer.cameraAddTween / 12);
}

with (objPlayer)    {
    gunScale = 1;
    comboAmount = 0;
    comboTimer = comboTimerMax;
}

var _ID = instance_create(x, y, objPoint);
_ID.Colour1 = c_red;
_ID.Colour2 = c_maroon;
_ID.Value = g.pointDecrement[g.pointDecrementState];

g.pointDecrementState = min(g.pointDecrementState + 1, array_length_1d(g.pointDecrement) - 1);

sound(sndType);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Die

drawState = 1;
sound(sndCompleteWord);

var _ID = instance_create(x, y, objPoint);
_ID.Value = pointValueKill;
_ID.Colour1 = pointColour3;
_ID.Colour2 = pointColour4;

with (objPlayer)    {
    comboAmount ++;
    comboTimer = comboTimerMax;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Increment Word Position

enemyWordPosition ++;
addScale = 0.5;
addBlend = 1;

if enemyWordPosition &gt;= enemyWordLength {
    event_user(1);
}

enemyWordTyped = string_copy(enemyWordIndex, 1, min(enemyWordPosition, enemyWordLength));

if !g.gameHTML  {
    var _ID = instance_create(0, 0, objTracer);
    _ID.startX = x + lengthdir_x(128, objPlayer.cameraYaw);
    _ID.startY = y + lengthdir_y(128, objPlayer.cameraYaw);
    _ID.startZ = drawZ;
    _ID.endX = objPlayer.cameraX + lengthdir_x(lengthdir_x(32, objPlayer.cameraYaw), objPlayer.cameraAddTween / 6);
    _ID.endY = objPlayer.cameraY + lengthdir_x(lengthdir_y(32, objPlayer.cameraYaw), objPlayer.cameraAddTween / 6);
    _ID.endZ = objPlayer.cameraZFrom - 12 + lengthdir_y(6, objPlayer.cameraAddTween / 12);
}

with (objPlayer)    {
    gunScale = 1;
}

var _ID = instance_create(x, y, objPoint);
_ID.Colour1 = pointColour1;
_ID.Colour2 = pointColour2;
_ID.Value = pointValueType;

sound(sndType);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Billboarded Sprite

d3d_set_hidden(false);

//Blend if Targeted
if enemyTargeted    {
    var _Mix = wave(0, 0.75, 0.4, 0);
    var _Colour = merge_colour(c_white, c_aqua, _Mix);
    var _Scale = wave(1.1, 1.35, 0.5, 0);
}   else    {
    var _Colour = c_white;
    var _Scale = 1;
}

var _totalScale = _Scale + addScale;
var _Colour = merge_colour(_Colour, c_red, addBlend)

//Calculate Positions
drawX = x;
drawY = y;
drawZ = ((sprite_height - sprite_yoffset) * _totalScale) + wave(0, 4, 8, 0) + zAdd;

//Angle Towards Player
d3d_transform_set_identity();
d3d_transform_add_rotation_x(90);
d3d_transform_add_rotation_z(point_direction(x, y, objPlayer.cameraX, objPlayer.cameraY) + 90);

//Render Self
d3d_transform_add_translation(drawX, drawY, drawZ);
draw_sprite_ext(sprite_index, image_index, 0, 0, _totalScale, _totalScale, 0, _Colour, drawAlpha);

//Render Text
d3d_set_zwriteenable(false);
draw_set_font(fontEnemy);
var _stringHeight = string_height(enemyWordIndex);
var _stringWidth = string_width(enemyWordIndex);
d3d_transform_add_translation(0, 0, _stringHeight);
draw_text_parameters(fa_left, fa_middle, _stringWidth * -0.5, 0, enemyWordIndex, drawAlpha, c_white, wave(-2, 2, 1, 0), 1, 0);
draw_text_parameters(fa_left, fa_middle, _stringWidth * -0.5 , 0, enemyWordTyped, drawAlpha, c_red, wave(-2, 2, 1, 0), 1, 0);
d3d_set_zwriteenable(true);

//Reset
draw_set_colour(c_white);
d3d_transform_set_identity();

switch (drawState)  {
    case 0:
        drawAlpha = min(drawAlpha + 0.025, 1);
        break;
    case 1:
        drawAlpha = max(drawAlpha - 0.1, 0);
        break;
}

//Destroy
if (drawAlpha &lt;= 0) and (drawState == 1)
    instance_destroy();
    
//Decrement Scale
addScale = lerp(addScale, 0, 0.1);
addBlend = lerp(addBlend, 0, 0.1);

d3d_set_hidden(true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
